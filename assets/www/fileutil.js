// Generated by CoffeeScript 1.6.3
(function() {
  var FileUtil,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  FileUtil = (function() {
    var _this = this;

    function FileUtil(filepath, callback) {
      this.openfile = __bind(this.openfile, this);
      this.handleError = __bind(this.handleError, this);
      this.onGetFileWriter = __bind(this.onGetFileWriter, this);
      this.onGetFileEntry = __bind(this.onGetFileEntry, this);
      this.onGetFileSystem = __bind(this.onGetFileSystem, this);
      console.log("tracemethod:init file open.");
      this.filepath = filepath;
      this.callback = callback;
    }

    FileUtil.prototype.onGetFileSystem = function(fileSystem) {
      var readFile,
        _this = this;
      console.log("tracemethod:onGetFileSystem.");
      readFile = function(dirEntry) {
        return dirEntry.getFile("readme.txt", {
          create: true,
          exclusive: false
        }, _this.onGetFileEntry, _this.handleError);
      };
      return fileSystem.root.getDirectory("COLAS", {
        create: true
      }, readFile, this.handleError);
    };

    FileUtil.prototype.onGetFileEntry = function(fileEntry) {
      console.log("tracemethod:onGetFileEntry.");
      console.log("fillepath:" + fileEntry.fullPath);
      return fileEntry.createWriter(this.onGetFileWriter, this.handleError);
    };

    FileUtil.prototype.onGetFileWriter = function(writer) {
      console.log("tracemethodonGetFileWriter.");
      return writer.write("{this:'hogehoge3'}");
    };

    FileUtil.prototype.handleError = function() {
      return console.log("failed file open.");
    };

    FileUtil.prototype.openfile = function() {
      console.log("tracemethod:openfile.");
      return window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, this.onGetFileSystem, this.handleError);
    };

    FileUtil.open = function(filepath, callback) {
      var fileutil;
      console.log("start file open.");
      fileutil = new FileUtil(filepath, callback);
      return fileutil.openfile();
    };

    return FileUtil;

  }).call(this);

  window.FileUtil = FileUtil;

}).call(this);
